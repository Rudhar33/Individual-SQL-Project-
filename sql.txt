CREATE TABLE STUDENT( 
STUDENT_ID INT PRIMARY KEY,
ADDRESS_ID INT,
FIRST_NAME VARCHAR(20),
LAST_NAME VARCHAR(20),
GUARDIAN_NAME VARCHAR(20),
DOB DATE,
MOBILE VARCHAR(10),
EMAIL VARCHAR(50),
JOINING_DATE DATE
); 

INSERT INTO "STUDENT" (STUDENT_ID, ADDRESS_ID, FIRST_NAME, LAST_NAME, GUARDIAN_NAME, DOB, MOBILE, EMAIL, JOINING_DATE) 
VALUES ('1', '1', 'Anil', 'Verma', 'Arun Verma', TO_DATE('2000-12-05 12:09:45', 'YYYY-MM-DD HH24:MI:SS'), '6478325376', 'anilverma@gmail.com', TO_DATE('2022-12-06 12:10:17', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "STUDENT" (STUDENT_ID, ADDRESS_ID, FIRST_NAME, LAST_NAME, GUARDIAN_NAME, DOB, MOBILE, EMAIL, JOINING_DATE) 
VALUES ('2', '2', 'Micheal', 'Charles', 'Aggam Charles', TO_DATE('2000-11-10 12:09:45', 'YYYY-MM-DD HH24:MI:SS'), '7859642315', 'm.charles@gmail.com', TO_DATE('2022-12-06 12:10:17', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "STUDENT" (STUDENT_ID, ADDRESS_ID, FIRST_NAME, LAST_NAME, GUARDIAN_NAME, DOB, MOBILE, EMAIL, JOINING_DATE) 
VALUES ('3', '3', 'Hennery', 'Salvadore', 'Ben John', TO_DATE('1999-12-25 12:09:45', 'YYYY-MM-DD HH24:MI:SS'), '6247592301', 'Hennery@gmail.com', TO_DATE('2022-12-06 12:10:17', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "STUDENT" (STUDENT_ID, ADDRESS_ID, FIRST_NAME, LAST_NAME, GUARDIAN_NAME, DOB, MOBILE, EMAIL, JOINING_DATE) 
VALUES ('4', '4', 'Sam', 'Singh', 'Amandeep Singh', TO_DATE('1997-12-02 12:09:45', 'YYYY-MM-DD HH24:MI:SS'), '2301448953', 'singh.sam@gmail.com', TO_DATE('2022-12-06 12:10:17', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO "STUDENT" (STUDENT_ID, ADDRESS_ID, FIRST_NAME, LAST_NAME, GUARDIAN_NAME, DOB, MOBILE, EMAIL, JOINING_DATE) 
VALUES ('5', '5', 'Zoye', 'Alam', 'Aneeta Alam', TO_DATE('1997-12-07 12:09:45', 'YYYY-MM-DD HH24:MI:SS'), '7596478457', 'zoyeee@gmail.com', TO_DATE('2022-12-06 12:10:17', 'YYYY-MM-DD HH24:MI:SS'));


CREATE TABLE ADDRESS( 
ADDRESS_ID INT PRIMARY KEY,
APT_NO VARCHAR(20),
STREET VARCHAR(20),
CITY VARCHAR(20),
ZIPCODE VARCHAR(20)
); 

INSERT INTO ADDRESS (ADDRESS_ID, APT_NO, STREET, CITY, ZIPCODE)
VALUES (1, '15', 'Williams Parkway', 'Brampton', 'L3X2C1');

INSERT INTO ADDRESS (ADDRESS_ID, APT_NO, STREET, CITY, ZIPCODE)
VALUES (2, '90', 'Dundas Street', 'Toronto', 'MT45TT');

INSERT INTO ADDRESS (ADDRESS_ID, APT_NO, STREET, CITY, ZIPCODE)
VALUES (3, '11', 'Bathurst Road', 'North York', 'M6X1J6');

INSERT INTO ADDRESS (ADDRESS_ID, APT_NO, STREET, CITY, ZIPCODE)
VALUES (4, '1', 'Young Street', 'Toronto', 'MY7T7Y');
INSERT INTO "ADDRESS" (ADDRESS_ID, APT_NO, STREET, CITY, ZIPCODE)
VALUES (5, '3', 'Williams Parkway', 'Brampton', 'L3X2C2');


CREATE TABLE EXAM ( 
EXAM_VAL_ID INT PRIMARY KEY, 
COURSE_ID INT, 
EXAM_TYPE_ID INT, 
STUDENT_ID INT , 
START_DATE DATE NOT NULL
); 

INSERT INTO EXAM (EXAM_VAL_ID, COURSE_ID, EXAM_TYPE_ID, STUDENT_ID, START_DATE)
VALUES ('123', '1101', '1', '1', TO_DATE('2022-12-10 12:09:45', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO EXAM (EXAM_VAL_ID, COURSE_ID, EXAM_TYPE_ID, STUDENT_ID, START_DATE)
VALUES ('12', '1101', '1', '2', TO_DATE('2022-12-10 12:09:45', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO EXAM (EXAM_VAL_ID, COURSE_ID, EXAM_TYPE_ID, STUDENT_ID, START_DATE)
VALUES ('126', '1101', '1', '3', TO_DATE('2022-12-10 12:09:45', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO EXAM (EXAM_VAL_ID, COURSE_ID, EXAM_TYPE_ID, STUDENT_ID, START_DATE)
VALUES ('127', '1101', '1', '4', TO_DATE('2022-12-10 12:09:45', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO EXAM (EXAM_VAL_ID, COURSE_ID, EXAM_TYPE_ID, STUDENT_ID, START_DATE)
VALUES ('128', '1101', '1', '5', TO_DATE('2022-12-10 12:09:45', 'YYYY-MM-DD HH24:MI:SS'));


select address_id,count(address_id) from student group by address_id having address_id = 4;

select lower(first_name) from student;

select upper(first_name) from student;

select INITCAP(first_name) from student;
select CONCAT(first_name,last_name) from student;

select SUBSTR(first_name,2) from student;

select INSTR(first_name,'a') from student;

select TRIM(first_name) from student;

select TRIM('p' from first_name) from student;

select lpad(first_name,5,'*') from student;

select ROUND(3.578) from student;

select ceil(3.178) from student;

select ceil(-3.178) from student;

select first_name,COALESCE(email,mobile,'dosent have one') from student;

select first_name,nvl(email,mobile) from student;


SELECT LISTAGG(first_name, ', ') WITHIN GROUP (ORDER BY first_name) "name_Listing"
FROM student;

Select student_id, First_name, Last_name from STUDENT;

SELECT student_id, First_name ||''|| Last_name AS "NAME" FROM STUDENT;

Select Student_id,First_name, mobile, email
FROM STUDENT 
WHERE Student_id >3;

Select Student_id,First_name, mobile, email, dob
FROM STUDENT 
WHERE dob IS NOT NULL;

Select * 
FROM STUDENT 
WHERE First_name LIKE 'A%';

Select * 
FROM STUDENT 
WHERE First_name LIKE 'S_%';

SELECT * 
FROM STUDENT 
WHERE DOB BETWEEN '01-DEC-2000' AND '31-DEC-2000';


SELECT* 
FROM ADDRESS
WHERE CITY IN ('Brampton');

Select * 
FROM ADDRESS
WHERE CITY IN ('Brampton','Toronto');

SELECT *
FROM STUDENT
WHERE dob>'01-Nov-2000' AND Joining_date >= '06-Dec-2022' ;

SELECT *
FROM STUDENT
WHERE Student_id>=1
ORDER BY student_id;

SELECT MIN(DOB) AS "DOB OF ELDEST STUDENT" 
FROM STUDENT;

SELECT COUNT (Student_id)
FROM STUDENT;

select * from address;

select * from student;

select * from student inner join address on student.address_id = address.address_id;

select * from student left join address on student.address_id = address.address_id order by first_name;

select * from student right join address on student.address_id = address.address_id order by first_name;

SELECT * FROM STUDENT CROSS JOIN ADDRESS;

select address_id from student where address_id = (select max(address_id) from student);

select address_id,first_name from student where address_id in (select distinct(address_id) from student);

select address_id,first_name from student student1 where not EXISTS (select address_id from student student2 where  student1.address_id = 5);

SELECT *
  FROM STUDENT
  JOIN ( SELECT address_ID 
         FROM address
         WHERE address_ID <2
         ORDER BY address_id
       ) SUB
    ON STUDENT.STUDENT_ID = STUDENT_ID;